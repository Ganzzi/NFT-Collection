{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","components/minter/Cover.js","utils/minter.js","components/minter/nfts/Add.js","components/minter/nfts/Sell.js","context/index.js","components/minter/nfts/updateRemoveModal.js","components/minter/nfts/Card.js","components/ui/Loader.js","components/minter/nfts/index.js","hooks/useMinterContract.js","hooks/useContract.js","assets/img/nft_geo_cover.png","App.js","hooks/useBalance.js","reportWebVitals.js","index.js"],"names":["Notification","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","_ref","text","_jsxs","children","className","NotificationError","_ref2","DefaultProps","defaultProps","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","_objectWithoutProperties","_excluded","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","_objectSpread","style","width","concat","height","Wallet","amount","symbol","destroy","_Fragment","Dropdown","Toggle","variant","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","name","coverImg","connect","background","minHeight","maxWidth","src","alt","Button","catch","e","console","log","web3","Web3","client","Web3Storage","token","process","formatName","encodeURI","convertObjectToFile","data","blob","Blob","JSON","stringify","type","File","createNft","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","minterContract","performActions","description","ipfsImage","ownerAddress","attributes","wrap","_context2","prev","next","_ref3","_callee","kit","defaultAccount","fileName","files","cid","url","_context","abrupt","image","owner","put","sent","methods","send","from","t0","stop","_x4","apply","arguments","_x","_x2","_x3","listNft","_ref5","_callee4","_ref4","tokenId","price","_context4","_ref6","_callee3","_context3","utils","toWei","toast","_x8","_x5","_x6","_x7","buyNft","_ref7","_callee6","seller","_context6","_ref8","_callee5","_context5","value","_x14","_x9","_x10","_x11","_x12","_x13","updateNft","_ref10","_callee8","_ref9","newPrice","_context8","_ref11","_callee7","_context7","updateListing","_x19","_x15","_x16","_x17","_x18","removeNft","_ref12","_callee10","_context10","_ref13","_callee9","_context9","cancelListing","_x23","_x20","_x21","_x22","uploadFileToWebStorage","_ref14","_callee11","file","imageName","_context11","_x24","getNfts","_ref15","_callee13","nfts","nftsLength","_loop","i","_context14","totalSupply","call","nft","_context13","Promise","_ref16","_callee12","resolve","res","meta","_context12","tokenURI","fetchNftMeta","fetchNftOwner","index","_x26","push","Number","delegateYield","all","t1","_x25","getActiveItem","_ref17","_callee15","activeNfts","_loop2","_context17","resolvedNft","_context16","_ref18","_callee14","reject","_context15","_x28","_x29","_x27","_ref19","_callee16","ipfsUrl","_context18","axios","get","_x30","_ref20","_callee17","_context19","ownerOf","_x31","_x32","SIZES","RARITYS","SHAPES","AddNfts","save","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setIpfsImage","_useState5","_useState6","setDescription","_useState7","_useState8","setAttributes","_useState9","_useState10","show","setShow","handleClose","setAttributesFunc","trait_type","attributeObject","arr","findIndex","el","oldArray","_toConsumableArray","Modal","onHide","centered","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","Control","placeholder","onChange","imageUrl","alert","Label","hidden","map","_rarity","toLowerCase","_size","shape","Footer","disabled","SellNft","setTokenId","setPrice","x","createContext","Provider","content","setContent","setNfts","setActiveNfts","URModal","update","remove","setNewPrice","FormControl","NftCard","contract","rerestAsset","React","useContext","_price","toString","_useContractKit","useContractKit","_React$useState","_React$useState2","handleShow","handleUpdate","handleRemove","handleBuy","Col","Card","Badge","bg","objectFit","Text","parseFloat","fromWei","Row","attribute","key","Loader","role","NftList","loading","setLoading","_React$useContext","handleResetAsset","getAssets","_nfts","_activeNfts","error","finish","sellNft","undefined","addNft","xs","sm","lg","_nft","Nft","useMinterContract","abi","contractAddress","getConnectedKit","setContract","getContract","useCallback","eth","Contract","useContract","MyNFTAbi","MyNFTContractAddress","MyNFT","App","_useBalance","balance","setBalance","getBalance","getTotalBalance","useBalance","title","Container","fluid","Nav","Link","CELO","Nfts","updateBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ContractKitProvider","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","document","getElementById"],"mappings":"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","file":"static/js/main.aecfe851.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"bottom-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import {ERC20_DECIMALS} from \"./constants\";\r\n\r\n// format a wallet address\r\nexport const truncateAddress = (address) => {\r\n    if (!address) return\r\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\r\n}\r\n\r\n// convert from big number\r\nexport const formatBigNumber = (num) => {\r\n    if (!num) return\r\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n}","const ERC20_DECIMALS = 18;\r\nexport { ERC20_DECIMALS };\r\n","import { useEffect, useRef } from \"react\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\n\r\nexport default function Identicon({ address, size, ...rest }) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (address && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(\r\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\r\n      );\r\n    }\r\n  }, [address, size]);\r\n\r\n  return (\r\n    <div {...rest}>\r\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\r\nimport Identicon from \"./ui/Identicon\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {formatBigNumber(amount)}{\" \"}\r\n                <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">\r\n                  {truncateAddress(address)}\r\n                </span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cover = ({ name, coverImg, connect }) => {\r\n  if (name) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to continue.</p>\r\n          <Button\r\n            onClick={() => connect().catch((e) => console.log(e))}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n\r\n        <p className=\"mt-auto text-secondary\">Powered by Celo</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;\r\n","import axios from \"axios\";\r\nimport { Web3Storage } from \"web3.storage/dist/bundle.esm.min.js\";\r\nimport MyNFTContractAddress from \"../contracts/MyNFT-address.json\";\r\nimport Web3 from \"web3\";\r\nimport {\r\n  NotificationSuccess,\r\n  NotificationError,\r\n} from \"../components/ui/Notifications\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst web3 = new Web3();\r\n\r\n// initialize IPFS\r\nconst client = new Web3Storage({\r\n  token: process.env.REACT_APP_STORAGE_API_KEY,\r\n});\r\n\r\nconst formatName = (name) => {\r\n  // replace all spaces with %20\r\n  return encodeURI(name);\r\n};\r\n\r\n// object to convert to file\r\nconst convertObjectToFile = (data) => {\r\n  const blob = new Blob([JSON.stringify(data)], { type: \"application/json\" });\r\n  const files = [new File([blob], `${data.name}.json`)];\r\n  return files;\r\n};\r\n\r\n// mint an NFT\r\nexport const createNft = async (\r\n  minterContract,\r\n  performActions,\r\n  { name, description, ipfsImage, ownerAddress, attributes }\r\n) => {\r\n  await performActions(async (kit) => {\r\n    if (!name || !description || !ipfsImage) return;\r\n    const { defaultAccount } = kit;\r\n\r\n    const data = {\r\n      name,\r\n      description,\r\n      image: ipfsImage,\r\n      owner: defaultAccount,\r\n      attributes,\r\n    };\r\n\r\n    try {\r\n      // trim any extra whitespaces from the name and\r\n      // replace the whitespace between the name with %20\r\n      const fileName = formatName(name);\r\n\r\n      //  bundle nft metadata into a file\r\n      const files = convertObjectToFile(data);\r\n\r\n      // save NFT metadata to web3 storage\r\n      const cid = await client.put(files);\r\n\r\n      // IPFS url for uploaded metadata\r\n      const url = `https://${cid}.ipfs.w3s.link/${fileName}.json`;\r\n\r\n      // mint the NFT and save the IPFS url to the blockchain\r\n      return await minterContract.methods\r\n        .createNft(ownerAddress, url)\r\n        .send({ from: defaultAccount });\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n  });\r\n};\r\n\r\n// list an NFT\r\nexport const listNft = async (\r\n  minterContract,\r\n  performActions,\r\n  { tokenId, price }\r\n) => {\r\n  await performActions(async (kit) => {\r\n    const { defaultAccount } = kit;\r\n\r\n    try {\r\n      await minterContract.methods\r\n        .listNft(tokenId, web3.utils.toWei(price))\r\n        .send({ from: defaultAccount });\r\n      toast(<NotificationSuccess text=\"List NFT Succesfully.\" />);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n};\r\n\r\n// buy an NFT\r\nexport const buyNft = async (\r\n  minterContract,\r\n  performActions,\r\n  tokenId,\r\n  seller,\r\n  price\r\n) => {\r\n  await performActions(async (kit) => {\r\n    const { defaultAccount } = kit;\r\n\r\n    if (seller == kit.defaultAccount) {\r\n      toast(<NotificationError text=\"You can not buy your own NFT.\" />);\r\n    } else {\r\n      try {\r\n        await minterContract.methods\r\n          .buyNft(tokenId)\r\n          .send({ from: defaultAccount, value: price });\r\n        toast(<NotificationSuccess text=\"Buy NFT Succesfully.\" />);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n// update an NFT price\r\nexport const updateNft = async (\r\n  minterContract,\r\n  performActions,\r\n  tokenId,\r\n  { newPrice }\r\n) => {\r\n  await performActions(async (kit) => {\r\n    try {\r\n      await minterContract.methods\r\n        .updateListing(tokenId, web3.utils.toWei(newPrice))\r\n        .send({ from: kit.defaultAccount });\r\n      toast(<NotificationSuccess text=\"Update NFT Succesfully.\" />);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n};\r\n\r\n// remove an NFT from marketplace\r\nexport const removeNft = async (minterContract, performActions, tokenId) => {\r\n  await performActions(async (kit) => {\r\n    try {\r\n      await minterContract.methods\r\n        .cancelListing(tokenId)\r\n        .send({ from: kit.defaultAccount });\r\n      toast(<NotificationSuccess text=\"Remove NFT Succesfully.\" />);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n};\r\n\r\n// function to upload a file to IPFS via web3.storage\r\nexport const uploadFileToWebStorage = async (e) => {\r\n  // Construct with token and endpoint\r\n  const client = new Web3Storage({\r\n    token: process.env.REACT_APP_STORAGE_API_KEY,\r\n  });\r\n  const files = e.target.files;\r\n  const file = files[0];\r\n  const fileName = file.name;\r\n  const imageName = formatName(fileName);\r\n  const cid = await client.put(files);\r\n  return `https://${cid}.ipfs.w3s.link/${imageName}`;\r\n};\r\n\r\n// fetch all NFTs on the smart contract\r\nexport const getNfts = async (minterContract) => {\r\n  try {\r\n    const nfts = [];\r\n    const nftsLength = await minterContract.methods.totalSupply().call();\r\n    for (let i = 0; i < Number(nftsLength); i++) {\r\n      const nft = new Promise(async (resolve) => {\r\n        const res = await minterContract.methods.tokenURI(i).call();\r\n        const meta = await fetchNftMeta(res);\r\n        const owner = await fetchNftOwner(minterContract, i);\r\n        resolve({\r\n          index: i,\r\n          owner,\r\n          name: meta.data.name,\r\n          image: meta.data.image,\r\n          description: meta.data.description,\r\n          attributes: meta.data.attributes,\r\n        });\r\n      });\r\n      nfts.push(nft);\r\n    }\r\n    return Promise.all(nfts);\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\n// fetch all listed NFTs on the smart contract\r\nexport const getActiveItem = async (minterContract) => {\r\n  const activeNfts = [];\r\n  const nftsLength = await minterContract.methods.totalSupply().call();\r\n\r\n  for (let i = 0; i < Number(nftsLength); i++) {\r\n    const nft = new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await minterContract.methods.getActiveItem(i).call();\r\n        const meta = await fetchNftMeta(res.url);\r\n\r\n        if (meta != null) {\r\n          resolve({\r\n            index: i,\r\n            seller: res.seller,\r\n            price: res.price,\r\n            image: meta.data.image,\r\n            name: meta.data.name,\r\n            description: meta.data.description,\r\n            attributes: meta.data.attributes,\r\n          });\r\n        } else {\r\n          resolve({\r\n            index: i,\r\n            seller: \"0x0000000000000000000000000000000000000000\",\r\n            price: \"\",\r\n            image: \"\",\r\n            name: \"\",\r\n            description: \"\",\r\n            attributes: [{}, {}, {}],\r\n          });\r\n        }\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const resolvedNft = await nft;\r\n      activeNfts.push(resolvedNft);\r\n    } catch (e) {\r\n      console.log({ e });\r\n    }\r\n  }\r\n\r\n  return activeNfts;\r\n};\r\n\r\n// get the metedata for an NFT from IPFS\r\nexport const fetchNftMeta = async (ipfsUrl) => {\r\n  try {\r\n    if (!ipfsUrl) return null;\r\n    const meta = await axios.get(ipfsUrl);\r\n    return meta;\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\n// get the owner address of an NFT\r\nexport const fetchNftOwner = async (minterContract, index) => {\r\n  try {\r\n    return await minterContract.methods.ownerOf(index).call();\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport { uploadFileToWebStorage } from \"../../../utils/minter\";\r\n\r\n// basic attributes that can be added to NFT\r\nconst SIZES = [\r\n  \"Scale\",\r\n  \"Attention-grabbing\",\r\n  \"Contextualization\",\r\n  \"Immersion\",\r\n  \"Physicality\",\r\n];\r\nconst RARITYS = [\r\n  \"Exclusive\",\r\n  \"Scarcity-driven\",\r\n  \"Collectibility\",\r\n  \"Investment\",\r\n  \"Social status\",\r\n];\r\nconst SHAPES = [\"Circle\", \"Square\", \"Triangle\", \"Hexagon\", \"Pentagon\"];\r\n\r\nconst AddNfts = ({ save, address }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [ipfsImage, setIpfsImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  //store attributes of an NFT\r\n  const [attributes, setAttributes] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // check if all form data has been filled\r\n  const isFormFilled = () =>\r\n    name && ipfsImage && description && attributes.length > 2;\r\n\r\n  // close the popup modal\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setAttributes([]);\r\n  };\r\n\r\n  // display the popup modal\r\n  const handleShow = () => setShow(true);\r\n\r\n  // add an attribute to an NFT\r\n  const setAttributesFunc = (e, trait_type) => {\r\n    const { value } = e.target;\r\n    const attributeObject = {\r\n      trait_type,\r\n      value,\r\n    };\r\n    const arr = attributes;\r\n\r\n    // check if attribute already exists\r\n    const index = arr.findIndex((el) => el.trait_type === trait_type);\r\n\r\n    if (index >= 0) {\r\n      // update the existing attribute\r\n      arr[index] = {\r\n        trait_type,\r\n        value,\r\n      };\r\n      setAttributes(arr);\r\n      return;\r\n    }\r\n\r\n    // add a new attribute\r\n    setAttributes((oldArray) => [...oldArray, attributeObject]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"dark\"\r\n        className=\"rounded-pill px-0 d-flex justify-content-center \"\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <i className=\"bi bi-plus\"></i> <p>Create NFT</p>\r\n      </Button>\r\n\r\n      {/* Modal */}\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create NFT</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form>\r\n            <FloatingLabel\r\n              controlId=\"inputLocation\"\r\n              label=\"Name\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name of NFT\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <Form.Control\r\n              type=\"file\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                const imageUrl = await uploadFileToWebStorage(e);\r\n                if (!imageUrl) {\r\n                  alert(\"failed to upload image\");\r\n                  return;\r\n                }\r\n                setIpfsImage(imageUrl);\r\n              }}\r\n              placeholder=\"Product name\"\r\n            />\r\n            <Form.Label>\r\n              <h5>Properties</h5>\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                setAttributesFunc(e, \"Rarity\");\r\n              }}\r\n              placeholder=\"Rarity\"\r\n            >\r\n              <option hidden>Rarity</option>\r\n              {RARITYS.map((_rarity) => (\r\n                <option\r\n                  key={`background-${_rarity.toLowerCase()}`}\r\n                  value={_rarity.toLowerCase()}\r\n                >\r\n                  {_rarity}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n\r\n            <Form.Control\r\n              as=\"select\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                setAttributesFunc(e, \"size\");\r\n              }}\r\n              placeholder=\"NFT Size\"\r\n            >\r\n              <option hidden>Size</option>\r\n              {SIZES.map((_size) => (\r\n                <option\r\n                  key={`color-${_size.toLowerCase()}`}\r\n                  value={_size.toLowerCase()}\r\n                >\r\n                  {_size}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n\r\n            <Form.Control\r\n              as=\"select\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                setAttributesFunc(e, \"shape\");\r\n              }}\r\n              placeholder=\"NFT Shape\"\r\n            >\r\n              <option hidden>Shape</option>\r\n              {SHAPES.map((shape) => (\r\n                <option\r\n                  key={`shape-${shape.toLowerCase()}`}\r\n                  value={shape.toLowerCase()}\r\n                >\r\n                  {shape}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                name,\r\n                ipfsImage,\r\n                description,\r\n                ownerAddress: address,\r\n                attributes,\r\n              });\r\n              handleClose();\r\n            }}\r\n          >\r\n            Create NFT\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddNfts.propTypes = {\r\n  // props passed into this component\r\n  save: PropTypes.func.isRequired,\r\n  address: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddNfts;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst SellNft = ({ save }) => {\r\n  const [tokenId, setTokenId] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  // check if all form data has been filled\r\n  const isFormFilled = () => tokenId && price;\r\n\r\n  // close the popup modal\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  // display the popup modal\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"dark\"\r\n        className=\"rounded-pill px-0 d-flex justify-content-center\"\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <i className=\"bi bi-plus\"></i> <p>Sell NFT</p>\r\n      </Button>\r\n\r\n      {/* Modal */}\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sell NFT</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form>\r\n            <FloatingLabel\r\n              controlId=\"tokenid\"\r\n              label=\"Token ID\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"token id of NFT\"\r\n                onChange={(e) => {\r\n                  setTokenId(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel controlId=\"price\" label=\"Price\" className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"price of NFT\"\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                tokenId,\r\n                price,\r\n              });\r\n              handleClose();\r\n            }}\r\n          >\r\n            Sell NFT\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nSellNft.propTypes = {\r\n  // props passed into this component\r\n  save: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SellNft;\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const x = createContext();\r\n\r\nexport const Provider = ({ children }) => {\r\n  // context to share global variables\r\n  const [content, setContent] = useState(\"collection\");\r\n  const [nfts, setNfts] = useState([]);\r\n  const [activeNfts, setActiveNfts] = useState([]);\r\n\r\n  return (\r\n    <x.Provider\r\n      value={{ content, setContent, nfts, setNfts, activeNfts, setActiveNfts }}\r\n    >\r\n      {children}\r\n    </x.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FloatingLabel,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\n// modal that show info to update and remove nft from the marketplace\r\nconst URModal = ({ update, remove, show, onHide }) => {\r\n  const [newPrice, setNewPrice] = useState(0);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>NFT Information</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form>\r\n          <FloatingLabel label=\"New Price\" className=\"mb-2\">\r\n            <FormControl\r\n              type=\"number\"\r\n              placeholder=\"Enter new price\"\r\n              onChange={(e) => {\r\n                setNewPrice(e.target.value);\r\n              }}\r\n            />\r\n          </FloatingLabel>\r\n          <Button\r\n            onClick={() => {\r\n              update({ newPrice });\r\n              onHide();\r\n            }}\r\n            variant=\"outline-primary\"\r\n            className=\"mx-2\"\r\n          >\r\n            Update NFT\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              remove();\r\n              onHide();\r\n            }}\r\n            variant=\"outline-danger\"\r\n            className=\"mx-2\"\r\n          >\r\n            Remove NFT\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-secondary\" onClick={onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nURModal.propTypes = {\r\n  // props passed into this component\r\n  //   show: PropTypes.instanceOf(Object).isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default URModal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Col, Badge, Stack, Row } from \"react-bootstrap\";\r\nimport { truncateAddress } from \"../../../utils\";\r\nimport Identicon from \"../../ui/Identicon\";\r\nimport { x } from \"../../../context\";\r\nimport URModal from \"./updateRemoveModal\";\r\nimport { updateNft, removeNft, buyNft } from \"../../../utils/minter\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport Web3 from \"web3\";\r\n\r\nconst web3 = new Web3();\r\n\r\nconst NftCard = ({ nft, contract, rerestAsset }) => {\r\n  const { image, description, owner, name, index, attributes, price, seller } =\r\n    nft;\r\n  const { content } = React.useContext(x);\r\n\r\n  let _price = \"\";\r\n  if (price) {\r\n    _price = price.toString();\r\n  }\r\n\r\n  const { performActions, address } = useContractKit();\r\n\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    if (seller === address && content === \"marketplace\") {\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (data) => {\r\n    try {\r\n      await updateNft(contract, performActions, index, data);\r\n      rerestAsset();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleRemove = async () => {\r\n    try {\r\n      await removeNft(contract, performActions, index);\r\n      rerestAsset();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleBuy = async () => {\r\n    try {\r\n      await buyNft(contract, performActions, index, seller, price);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col key={index}>\r\n      <URModal\r\n        show={show}\r\n        onHide={handleClose}\r\n        update={handleUpdate}\r\n        remove={handleRemove}\r\n      />\r\n      <Card className=\" h-100\">\r\n        <Card.Header>\r\n          <Stack direction=\"horizontal\" gap={2}>\r\n            {content === \"collection\" ? (\r\n              <>\r\n                <span className=\"font-monospace text-secondary\">\r\n                  Own by\r\n                  {owner === address\r\n                    ? \" \" + \"You\"\r\n                    : \" \" + truncateAddress(owner)}\r\n                </span>\r\n                <a\r\n                  href={`https://alfajores-blockscout.celo-testnet.org/address/${owner}/transactions`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <Identicon address={owner} size={28} />\r\n                </a>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"font-monospace text-secondary\">\r\n                  Own by\r\n                  {seller === address\r\n                    ? \" \" + \"You\"\r\n                    : \" \" + truncateAddress(seller)}\r\n                </span>\r\n                <a\r\n                  href={`https://alfajores-blockscout.celo-testnet.org/address/${seller}/transactions`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <Identicon address={seller} size={28} />\r\n                </a>\r\n              </>\r\n            )}\r\n\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              {index} ID\r\n            </Badge>\r\n          </Stack>\r\n        </Card.Header>\r\n\r\n        <div className=\"ratio ratio-4x3 \">\r\n          <img\r\n            src={image}\r\n            alt={description}\r\n            style={{ objectFit: \"cover\" }}\r\n            onClick={handleShow}\r\n          />\r\n        </div>\r\n\r\n        <Card.Body className=\"d-flex flex-column text-center \">\r\n          <Card.Title onClick={handleShow}>{name}</Card.Title>\r\n          <Card.Text className=\"flex-grow-1\" onClick={handleShow}>\r\n            {description}\r\n          </Card.Text>\r\n\r\n          {content === \"marketplace\" && (\r\n            <div className=\"d-grid gap-2 mt-1 mb-3\">\r\n              <a\r\n                className=\"btn btn-lg btn-outline-dark buyBtn fs-6 p-3\"\r\n                onClick={handleBuy}\r\n              >\r\n                {/* buy for {parseFloat(price * 10e-19)} CELO  */}\r\n                buy for {parseFloat(web3.utils.fromWei(_price, \"ether\"))} CELO\r\n              </a>\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <Row className=\"mt-2 row\">\r\n              {attributes.map((attribute, key) => (\r\n                <Col key={key} className=\"col-12 my-1 \">\r\n                  <div className=\"border rounded bg-light\">\r\n                    <div className=\"text-dark fw-lighter small text-capitalize\">\r\n                      {attribute.trait_type}\r\n                    </div>\r\n                    <div className=\"text-secondary text-capitalize font-monospace\">\r\n                      {attribute.value}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nNftCard.propTypes = {\r\n  // props passed into this component\r\n  nft: PropTypes.instanceOf(Object).isRequired,\r\n  contract: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default NftCard;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddNfts from \"./Add\";\r\nimport SellNft from \"./Sell\";\r\nimport Nft from \"./Card\";\r\nimport Loader from \"../../ui/Loader\";\r\nimport { NotificationSuccess, NotificationError } from \"../../ui/Notifications\";\r\nimport {\r\n  getActiveItem,\r\n  getNfts,\r\n  createNft,\r\n  listNft,\r\n} from \"../../../utils/minter\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { x } from \"../../../context\";\r\n\r\nconst NftList = ({ minterContract, name }) => {\r\n  /* performActions : used to run smart contract interactions in order\r\n   *  address : fetch the address of the connected wallet\r\n   */\r\n  const { performActions, address } = useContractKit();\r\n  const [loading, setLoading] = useState(false);\r\n  const { content, nfts, setNfts, activeNfts, setActiveNfts } =\r\n    React.useContext(x);\r\n\r\n  const handleResetAsset = () => getAssets(); // reset when update or delete NFT\r\n\r\n  // function to get NFTs\r\n  const getAssets = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // fetch all nfts from the smart contract\r\n      if (content === \"collection\") {\r\n        const _nfts = await getNfts(minterContract);\r\n        setNfts(_nfts);\r\n      } else if (content === \"marketplace\") {\r\n        const _activeNfts = await getActiveItem(minterContract);\r\n        setActiveNfts(_activeNfts);\r\n      }\r\n      if (!nfts || !activeNfts) return;\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // function when click on the sell button, check owner, exist,...\r\n  const sellNft = async (data) => {\r\n    try {\r\n      if (nfts[data.tokenId] === undefined) {\r\n        toast(<NotificationError text=\"NFT does not exist.\" />);\r\n      } else if (nfts[data.tokenId].owner !== address) {\r\n        toast(<NotificationError text=\"You are not the owner of the NFT.\" />);\r\n      } else if (nfts[data.tokenId].price !== undefined) {\r\n        toast(<NotificationError text=\"NFT already in marketplace.\" />);\r\n      } else {\r\n        setLoading(true);\r\n\r\n        // create an nft functionality\r\n        await listNft(minterContract, performActions, data);\r\n        getAssets();\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Failed to create an NFT.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // function when click on the create button\r\n  const addNft = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // create an nft functionality\r\n      await createNft(minterContract, performActions, data);\r\n      toast(<NotificationSuccess text=\"Updating NFT list....\" />);\r\n      getAssets();\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Failed to create an NFT.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // useEffect that get the asset when something change\r\n  useEffect(() => {\r\n    try {\r\n      if (address && minterContract) {\r\n        getAssets();\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  }, [minterContract, address, content]);\r\n\r\n  if (address) {\r\n    return (\r\n      <>\r\n        {!loading ? (\r\n          <>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n              <h1 className=\"fs-4 fw-bold mb-0\">{name}</h1>\r\n\r\n              {content === \"collection\" ? (\r\n                <AddNfts save={addNft} address={address} />\r\n              ) : (\r\n                <SellNft save={sellNft} />\r\n              )}\r\n            </div>\r\n            <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\r\n              {/* display all NFTs */}\r\n              {content === \"collection\"\r\n                ? nfts.map((_nft) => (\r\n                    <Nft\r\n                      key={_nft.index}\r\n                      nft={{\r\n                        ..._nft,\r\n                      }}\r\n                      contract={minterContract}\r\n                      rerestAsset={handleResetAsset}\r\n                    />\r\n                  ))\r\n                : activeNfts.map((_nft) => {\r\n                    if (\r\n                      _nft.seller !=\r\n                      \"0x0000000000000000000000000000000000000000\"\r\n                    ) {\r\n                      return (\r\n                        <Nft\r\n                          key={_nft.index}\r\n                          nft={{\r\n                            ..._nft,\r\n                          }}\r\n                          contract={minterContract}\r\n                          rerestAsset={handleResetAsset}\r\n                        />\r\n                      );\r\n                    }\r\n                  })}\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nNftList.propTypes = {\r\n  // props passed into this component\r\n  minterContract: PropTypes.instanceOf(Object),\r\n  updateBalance: PropTypes.func.isRequired,\r\n};\r\n\r\nNftList.defaultProps = {\r\n  minterContract: null,\r\n};\r\n\r\nexport default NftList;\r\n","import { useContract } from \"./useContract\";\r\nimport MyNFTAbi from \"../contracts/MyNFT.json\";\r\nimport MyNFTContractAddress from \"../contracts/MyNFT-address.json\";\r\n\r\nexport const useMinterContract = () =>\r\n  useContract(MyNFTAbi.abi, MyNFTContractAddress.MyNFT);\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useContract = (abi, contractAddress) => {\r\n  const { getConnectedKit, address } = useContractKit();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const getContract = useCallback(async () => {\r\n    const kit = await getConnectedKit();\r\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\r\n  }, [getConnectedKit, abi, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    if (address) getContract();\r\n  }, [address, getContract]);\r\n\r\n  return contract;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/nft_geo_cover.2a7cf529.png\";","import React from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { Notification } from \"./components/ui/Notifications\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport Cover from \"./components/minter/Cover\";\r\nimport Nfts from \"./components/minter/nfts\";\r\nimport { useBalance, useMinterContract } from \"./hooks\";\r\nimport coverImg from \"./assets/img/nft_geo_cover.png\";\r\nimport \"./App.css\";\r\nimport { x } from \"./context\";\r\n\r\nconst App = function AppWrapper() {\r\n  const { address, destroy, connect } = useContractKit();\r\n  const { balance, getBalance } = useBalance();\r\n  const minterContract = useMinterContract();\r\n  const { content, setContent } = React.useContext(x);\r\n  let title = content === \"collection\" ? \"GEO Collection\" : \"GEO Marketplace\";\r\n\r\n  return (\r\n    <>\r\n      <Notification />\r\n      {address ? (\r\n        true ? (\r\n          <Container fluid=\"md\">\r\n            <Nav className=\"d-flex pt-3 py-1 px-3 gap-5 \">\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"mx-2 \"\r\n                  onClick={() => {\r\n                    setContent(\"collection\");\r\n                  }}\r\n                >\r\n                  <h3>Collection</h3>\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"mx-2 \"\r\n                  onClick={() => {\r\n                    setContent(\"marketplace\");\r\n                  }}\r\n                >\r\n                  <h3>Marketplace</h3>\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"ms-auto\">\r\n                <Wallet\r\n                  address={address}\r\n                  amount={balance.CELO}\r\n                  symbol=\"CELO\"\r\n                  destroy={destroy}\r\n                />\r\n              </Nav.Item>\r\n            </Nav>\r\n\r\n            <main className=\"mt-4\">\r\n              <Nfts\r\n                name={title}\r\n                updateBalance={getBalance}\r\n                minterContract={minterContract}\r\n              />\r\n            </main>\r\n          </Container>\r\n        ) : (\r\n          <div></div>\r\n        )\r\n      ) : (\r\n        <Cover name=\"GEO Collection\" coverImg={coverImg} connect={connect} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useBalance = () => {\r\n  const { address, kit } = useContractKit();\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  const getBalance = useCallback(async () => {\r\n    // fetch a connected wallet token balance\r\n    const value = await kit.getTotalBalance(address);\r\n    setBalance(value);\r\n  }, [address, kit]);\r\n\r\n  useEffect(() => {\r\n    if (address) getBalance();\r\n  }, [address, getBalance]);\r\n\r\n  return {\r\n    balance,\r\n    getBalance,\r\n  };\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ContractKitProvider,\r\n  Alfajores,\r\n  NetworkNames,\r\n} from \"@celo-tools/use-contractkit\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport { Provider } from \"./context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContractKitProvider\r\n      networks={[Alfajores]}\r\n      network={{\r\n        name: NetworkNames.Alfajores,\r\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\r\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\r\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\r\n        chainId: 44787,\r\n      }}\r\n      dapp={{\r\n        name: \"Celo React Boilerplate\",\r\n        description: \"A React Boilerplate for Celo Dapps\",\r\n      }}\r\n    >\r\n      <Provider>\r\n        <App />\r\n      </Provider>\r\n    </ContractKitProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}